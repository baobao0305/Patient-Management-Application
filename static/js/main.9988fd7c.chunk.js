(this["webpackJsonppatient-management-frontend"]=this["webpackJsonppatient-management-frontend"]||[]).push([[0],{135:function(e,a,t){e.exports=t(153)},141:function(e,a,t){},153:function(e,a,t){"use strict";t.r(a);var n=t(0),l=t.n(n),r=t(110),i=t.n(r),s=(t(141),t(62)),c=t(8),o=t(217),m=t(226),d=t(227),u=t(222),p=t(232),E=t(224),v=t(233),g=t(234),h=t(235),f=t(236),y=t(237),C=t(216),A=t(219),b=t(115),N=t.n(b),O=t(112),P=t.n(O),D=t(113),S=t.n(D);var I=()=>{const[e,a]=Object(n.useState)([]),[t,r]=Object(n.useState)([]),[i,s]=Object(n.useState)(""),[b,O]=Object(n.useState)(0),[D,I]=Object(n.useState)(10),j=Object(c.o)();Object(n.useEffect)(()=>{(async()=>{try{const e=(await o.a.get("https://localhost:7141/api/patients")).data;e&&Array.isArray(e.$values)?(a(e.$values),r(e.$values)):console.error("Unexpected data format:",e)}catch(e){console.error("Error fetching patients:",e)}})()},[]),Object(n.useEffect)(()=>{(()=>{const a=i.toLowerCase(),t=e.filter(e=>{var t;const n=`${e.firstName} ${e.lastName}`.toLowerCase().includes(a),l=null===(t=e.dateOfBirth)||void 0===t?void 0:t.includes(a),r=e.contactInfo&&e.contactInfo.some(e=>e.contactDetail.includes(a)),i=e.isActive.toLowerCase().includes(a);return n||l||r||i});r(t)})()},[i,e]);return l.a.createElement("div",{className:"container"},l.a.createElement("h2",null,"Patient List"),l.a.createElement(m.a,null,l.a.createElement(d.a,{p:2,display:"flex",flexDirection:"column",gap:2},l.a.createElement(d.a,{display:"flex",gap:2,alignItems:"center"},l.a.createElement(u.a,{variant:"outlined",label:"Search (Name, DOB, Contacts, or Status)",value:i,onChange:e=>s(e.target.value),InputProps:{endAdornment:l.a.createElement(p.a,null,l.a.createElement(P.a,null))},fullWidth:!0}),l.a.createElement(E.a,{variant:"contained",color:"primary",startIcon:l.a.createElement(S.a,null),onClick:()=>{j("/add-patient")}},"Add Patient")),l.a.createElement(v.a,null,l.a.createElement(g.a,null,l.a.createElement(h.a,null,l.a.createElement(f.a,null,"First Name"),l.a.createElement(f.a,null,"Last Name"),l.a.createElement(f.a,null,"Date of Birth"),l.a.createElement(f.a,null,"Status"),l.a.createElement(f.a,null,"Actions"))),l.a.createElement(y.a,null,t.slice(b*D,b*D+D).map(e=>l.a.createElement(h.a,{key:e.patientID},l.a.createElement(f.a,null,e.firstName),l.a.createElement(f.a,null,e.lastName),l.a.createElement(f.a,null,(e=>{if(!e)return"";const a=new Date(e);return`${String(a.getDate()).padStart(2,"0")}-${String(a.getMonth()+1).padStart(2,"0")}-${a.getFullYear()}`})(e.dateOfBirth)),l.a.createElement(f.a,null,e.isActive),l.a.createElement(f.a,null,l.a.createElement(C.a,{title:"View Details"},l.a.createElement(p.a,{color:"primary",onClick:()=>{return a=e.patientID,void j("/patient-detail/"+a);var a}},l.a.createElement(N.a,null)))))))),l.a.createElement(A.a,{rowsPerPageOptions:[10,25,50],component:"div",count:t.length,rowsPerPage:D,page:b,onPageChange:(e,a)=>{O(a)},onRowsPerPageChange:e=>{I(parseInt(e.target.value,10)),O(0)}}))))},j=t(231),B=t(223),k=t(218),w=t(221);var T=()=>{const[e,a]=Object(n.useState)(""),[t,r]=Object(n.useState)(""),[i,s]=Object(n.useState)(""),[c,d]=Object(n.useState)(""),[p,v]=Object(n.useState)([""]),[g,h]=Object(n.useState)([""]),[f,y]=Object(n.useState)(""),[C,A]=Object(n.useState)(""),[b,N]=Object(n.useState)(!0);return l.a.createElement("div",{className:"container"},l.a.createElement("h2",null,"Add New Patient"),l.a.createElement(m.a,{style:{padding:"16px"}},l.a.createElement("form",{onSubmit:async n=>{n.preventDefault();const l={firstName:e,lastName:t,gender:i,dateOfBirth:c,isActive:b,ContactInfo:[...p.map(e=>({ContactType:"Phone",ContactDetail:e})),...g.map(e=>({ContactType:"Email",ContactDetail:e}))],Addresses:[{AddressType:"Primary",AddressDetail:f},{AddressType:"Secondary",AddressDetail:C}]};try{const e=await o.a.post("https://localhost:7141/api/patients",l);console.log(e.data),alert("Patient added successfully!"),a(""),r(""),s(""),d(""),v([""]),h([""]),y(""),A(""),N(!0)}catch(m){m.response?(console.error("Error adding patient:",m.response.data),alert("Error adding patient: "+m.response.data)):m.request?(console.error("Error adding patient: No response received"),alert("Error adding patient: No response received")):(console.error("Error adding patient:",m.message),alert("Error adding patient: "+m.message))}}},l.a.createElement("h3",null,"Demographics"),l.a.createElement(u.a,{label:"First Name",variant:"outlined",fullWidth:!0,margin:"normal",value:e,onChange:e=>a(e.target.value),required:!0}),l.a.createElement(u.a,{label:"Last Name",variant:"outlined",fullWidth:!0,margin:"normal",value:t,onChange:e=>r(e.target.value),required:!0}),l.a.createElement(j.a,{fullWidth:!0,margin:"normal",required:!0},l.a.createElement(B.a,null,"Gender"),l.a.createElement(k.a,{value:i,onChange:e=>s(e.target.value),label:"Gender"},l.a.createElement(w.a,{value:"Male"},"Male"),l.a.createElement(w.a,{value:"Female"},"Female"))),l.a.createElement(u.a,{label:"Date of Birth",variant:"outlined",type:"date",fullWidth:!0,margin:"normal",InputLabelProps:{shrink:!0},value:c,onChange:e=>d(e.target.value),required:!0}),l.a.createElement("h3",null,"Addresses"),l.a.createElement(u.a,{label:"Primary Address",variant:"outlined",fullWidth:!0,margin:"normal",value:f,onChange:e=>y(e.target.value),required:!0}),l.a.createElement(u.a,{label:"Secondary Address (Optional)",variant:"outlined",fullWidth:!0,margin:"normal",value:C,onChange:e=>A(e.target.value)}),l.a.createElement("h3",null,"Contact Info"),p.map((e,a)=>l.a.createElement("div",{key:a,style:{marginBottom:"16px"}},l.a.createElement(u.a,{label:"Phone Number",variant:"outlined",fullWidth:!0,margin:"normal",value:e,onChange:e=>((e,a)=>{const t=p.map((t,n)=>n===e?a.target.value:t);v(t)})(a,e),required:!0}),a>0&&l.a.createElement(E.a,{size:"small",variant:"contained",color:"secondary",onClick:()=>(e=>{v(p.filter((a,t)=>t!==e))})(a),style:{marginTop:"8px"}},"Remove Phone"))),l.a.createElement(E.a,{size:"small",variant:"contained",color:"primary",onClick:()=>{v([...p,""])}},"Add Phone Number"),g.map((e,a)=>l.a.createElement("div",{key:a,style:{marginBottom:"16px"}},l.a.createElement(u.a,{label:"Email Address",variant:"outlined",fullWidth:!0,margin:"normal",value:e,onChange:e=>((e,a)=>{const t=g.map((t,n)=>n===e?a.target.value:t);h(t)})(a,e),required:!0}),a>0&&l.a.createElement(E.a,{size:"small",variant:"contained",color:"secondary",onClick:()=>(e=>{h(g.filter((a,t)=>t!==e))})(a),style:{marginTop:"8px"}},"Remove Email"))),l.a.createElement(E.a,{size:"small",variant:"contained",color:"primary",onClick:()=>{h([...g,""])}},"Add Email Address"),l.a.createElement(E.a,{size:"large",type:"submit",variant:"contained",color:"primary",style:{marginTop:"8px",display:"block"}},"Add Patient"))))};var W=()=>{const{id:e}=Object(c.q)(),a=Object(c.o)(),[t,r]=Object(n.useState)({firstName:"",lastName:"",gender:"",dateOfBirth:"",primaryAddress:"",secondaryAddress:"",phoneContacts:[],emailContacts:[],isActive:"",inactiveReason:""});Object(n.useEffect)(()=>{(async()=>{try{const a=(await o.a.get("https://localhost:7141/api/patients/"+e)).data,t=(await o.a.get(`https://localhost:7141/api/patients/${e}/addresses`)).data,n=(await o.a.get(`https://localhost:7141/api/patients/${e}/contacts`)).data.$values||[],l=t.primaryAddress||"",i=t.secondaryAddress||"",s=n.filter(e=>"Phone"===e.contactType).map(e=>e.contactDetail),c=n.filter(e=>"Email"===e.contactType).map(e=>e.contactDetail),m=new Date(a.dateOfBirth);m.setMinutes(m.getMinutes()-m.getTimezoneOffset());const d=m.toISOString().split("T")[0];r({firstName:a.firstName,lastName:a.lastName,gender:a.gender,dateOfBirth:d,primaryAddress:l,secondaryAddress:i,phoneContacts:s,emailContacts:c,isActive:a.isActive,inactiveReason:a.inactiveReason||""})}catch(a){console.error("Error fetching patient data:",a)}})()},[e]);const i=e=>{r({...t,[e.target.name]:e.target.value})},s=(e,a,n)=>{const l=[...t[a]];l[e]=n.target.value,r({...t,[a]:l})},d=e=>{r({...t,[e]:[...t[e],""]})};return l.a.createElement("div",{className:"container"},l.a.createElement("h2",null,"Update Patient"),l.a.createElement(m.a,{style:{padding:"16px"}},l.a.createElement("h3",null,"Demographics"),l.a.createElement("form",{onSubmit:async n=>{if(n.preventDefault(),"Inactive"!==t.isActive||t.inactiveReason)try{const n={PatientID:e,firstName:t.firstName,lastName:t.lastName,gender:t.gender,dateOfBirth:t.dateOfBirth,isActive:t.isActive,inactiveReason:"Active"===t.isActive?null:t.inactiveReason,ContactInfo:[...t.phoneContacts.map(a=>({ContactType:"Phone",ContactDetail:a,PatientID:e})),...t.emailContacts.map(a=>({ContactType:"Email",ContactDetail:a,PatientID:e}))],Addresses:[{AddressType:"Primary",AddressDetail:t.primaryAddress,PatientID:e},{AddressType:"Secondary",AddressDetail:t.secondaryAddress,PatientID:e}]};console.log("Data to be submitted:",n),await o.a.put("https://localhost:7141/api/patients/"+e,n),alert("Patient updated successfully!"),a("/")}catch(l){console.error("Error updating patient:",l)}else alert("Please provide a reason for inactivation.")}},l.a.createElement(u.a,{label:"First Name",name:"firstName",variant:"outlined",fullWidth:!0,margin:"normal",value:t.firstName,onChange:i,required:!0}),l.a.createElement(u.a,{label:"Last Name",name:"lastName",variant:"outlined",fullWidth:!0,margin:"normal",value:t.lastName,onChange:i,required:!0}),l.a.createElement(u.a,{label:"Gender",name:"gender",variant:"outlined",fullWidth:!0,margin:"normal",value:t.gender,onChange:i,required:!0,select:!0},l.a.createElement(w.a,{value:"Male"},"Male"),l.a.createElement(w.a,{value:"Female"},"Female")),l.a.createElement(u.a,{label:"Date of Birth",name:"dateOfBirth",variant:"outlined",type:"date",fullWidth:!0,margin:"normal",InputLabelProps:{shrink:!0},value:t.dateOfBirth,onChange:i,required:!0}),l.a.createElement(u.a,{label:"Status",name:"isActive",variant:"outlined",fullWidth:!0,margin:"normal",value:t.isActive,onChange:i,required:!0,select:!0},l.a.createElement(w.a,{value:"Active"},"Active"),l.a.createElement(w.a,{value:"Inactive"},"Inactive")),"Inactive"===t.isActive&&l.a.createElement(u.a,{label:"Reason for Inactivation",name:"inactiveReason",variant:"outlined",fullWidth:!0,margin:"normal",value:t.inactiveReason,onChange:i,required:!0}),l.a.createElement("h3",null,"Addresses"),l.a.createElement(u.a,{label:"Primary Address",name:"primaryAddress",variant:"outlined",fullWidth:!0,margin:"normal",value:t.primaryAddress,onChange:i}),l.a.createElement(u.a,{label:"Secondary Address",name:"secondaryAddress",variant:"outlined",fullWidth:!0,margin:"normal",value:t.secondaryAddress,onChange:i}),l.a.createElement("h3",null,"Contacts"),t.phoneContacts.map((e,a)=>l.a.createElement(u.a,{key:a,label:"Phone Contact "+(a+1),variant:"outlined",fullWidth:!0,margin:"normal",value:e,onChange:e=>s(a,"phoneContacts",e)})),l.a.createElement(E.a,{variant:"outlined",onClick:()=>d("phoneContacts")},"Add Phone Contact"),t.emailContacts.map((e,a)=>l.a.createElement(u.a,{key:a,label:"Email Contact "+(a+1),variant:"outlined",fullWidth:!0,margin:"normal",value:e,onChange:e=>s(a,"emailContacts",e)})),l.a.createElement(E.a,{variant:"outlined",onClick:()=>d("emailContacts")},"Add Email Contact"),l.a.createElement(E.a,{type:"submit",variant:"contained",color:"primary",style:{marginTop:"8px",display:"block"}},"Update Patient"))))},R=t(238);var q=()=>{const{id:e}=Object(c.q)(),a=Object(c.o)(),[t,r]=Object(n.useState)({firstName:"",lastName:"",gender:"",dateOfBirth:"",primaryAddress:"",secondaryAddress:"",phoneContacts:[],emailContacts:[],status:"",inactiveReason:""});Object(n.useEffect)(()=>{(async()=>{try{const a=await o.a.get("https://localhost:7141/api/patients/"+e),t=a.data;console.log("Patient data:",a.data);const n=(await o.a.get(`https://localhost:7141/api/patients/${e}/addresses`)).data,l=(await o.a.get(`https://localhost:7141/api/patients/${e}/contacts`)).data.$values||[],i=n.primaryAddress||"",s=n.secondaryAddress||"",c=l.filter(e=>"Phone"===e.contactType).map(e=>e.contactDetail),m=l.filter(e=>"Email"===e.contactType).map(e=>e.contactDetail),d=t.dateOfBirth?new Date(t.dateOfBirth).toLocaleDateString("en-GB"):"";r({firstName:t.firstName,lastName:t.lastName,gender:t.gender,dateOfBirth:d,primaryAddress:i,secondaryAddress:s,phoneContacts:c,emailContacts:m,status:t.isActive,inactiveReason:t.inactiveReason||""})}catch(a){console.error("Error fetching patient data:",a)}})()},[e]);return l.a.createElement("div",{className:"container"},l.a.createElement("h2",null,"Patient Detail"),l.a.createElement(m.a,{style:{padding:"16px"}},l.a.createElement(R.a,{variant:"h6"},"Demographics"),l.a.createElement(R.a,null,l.a.createElement("strong",null,"First Name:")," ",t.firstName),l.a.createElement(R.a,null,l.a.createElement("strong",null,"Last Name:")," ",t.lastName),l.a.createElement(R.a,null,l.a.createElement("strong",null,"Gender:")," ",t.gender),l.a.createElement(R.a,null,l.a.createElement("strong",null,"Date of Birth:")," ",t.dateOfBirth),l.a.createElement(R.a,null,l.a.createElement("strong",null,"Status:")," ",t.status),"Inactive"===t.status&&l.a.createElement(R.a,null,l.a.createElement("strong",null,"Reason for Inactivation:")," ",t.inactiveReason),l.a.createElement(R.a,{variant:"h6"},"Addresses"),l.a.createElement(R.a,null,l.a.createElement("strong",null,"Primary Address:")," ",t.primaryAddress),l.a.createElement(R.a,null,l.a.createElement("strong",null,"Secondary Address:")," ",t.secondaryAddress),l.a.createElement(R.a,{variant:"h6"},"Contacts"),t.phoneContacts.map((e,a)=>l.a.createElement(R.a,{key:a},l.a.createElement("strong",null,"Phone ",a+1,":")," ",e)),t.emailContacts.map((e,a)=>l.a.createElement(R.a,{key:a},l.a.createElement("strong",null,"Email ",a+1,":")," ",e)),l.a.createElement(d.a,{mt:2},l.a.createElement(E.a,{variant:"contained",color:"primary",onClick:()=>{a("/update-patient/"+e)}},"Update Patient"))))};var x=()=>l.a.createElement(s.a,{basename:"/Patient-Management-Application"},l.a.createElement("div",{className:"App"},l.a.createElement(c.c,null,l.a.createElement(c.a,{path:"/",element:l.a.createElement(I,null)}),l.a.createElement(c.a,{path:"/add-patient",element:l.a.createElement(T,null)}),l.a.createElement(c.a,{path:"/update-patient/:id",element:l.a.createElement(W,null)}),l.a.createElement(c.a,{path:"/patient-detail/:id",element:l.a.createElement(q,null)}))));var $=e=>{e&&e instanceof Function&&t.e(3).then(t.bind(null,240)).then(a=>{let{getCLS:t,getFID:n,getFCP:l,getLCP:r,getTTFB:i}=a;t(e),n(e),l(e),r(e),i(e)})};t(151);i.a.createRoot(document.getElementById("root")).render(l.a.createElement(l.a.StrictMode,null,l.a.createElement(x,null))),$()}},[[135,1,2]]]);
//# sourceMappingURL=main.9988fd7c.chunk.js.map